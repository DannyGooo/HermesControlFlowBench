public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r3, r5, r8;
        JavaScript.Exception Catch;
        JavaScript.Environment_this.index_0 r10;
        JavaScript.Environment_this r0;
        JavaScript.Undefined r1;
        Hbc.GlobalObject r2;
        JavaScript.IteratorBegin r11, r9;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object r14, r13;
        Hbc.GlobalObject.console.log r6;
        JavaScript.IteratorNext r4;
        JavaScript.Environment.index_1 r7;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        r3 = r1;

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObject()>();

        r5 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Symbol hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 1, "Symbol");

        r6 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Symbol.iterator hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r5, 2, "iterator");

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Function.HermesByteCode.hermesNoNameFunction_0 CreateClosure(JavaScript.Environment,int)>(r0, 1);

        staticinvoke <Hbc.Opcode: void PutOwnByVal(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Boolean)>(r4, r7, r6, 1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r4);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r10 = r8;

        r11 = staticinvoke <Hbc.Opcode: JavaScript.IteratorBegin IteratorBegin(JavaScript.Object)>(r10);

        r9 = r11;

     label1:
        r4 = staticinvoke <Hbc.Opcode: JavaScript.IteratorNext IteratorNext(JavaScript.Object,JavaScript.Object)>(r9, r10);

        r5 = r9;

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r5, r1);

        if r6 == 1 goto label5;

     label2:
        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r4);

        r5 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "console");

        r6 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r5, 4, "log");

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r14 = r5;

        r13 = r7;

        r8 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r14, r13);

        r3 = r8;

     label3:
        goto label1;

     label4:
        Catch := @caughtexception;

        staticinvoke <Hbc.Opcode: JavaScript.IteratorClose IteratorClose(JavaScript.Object,JavaScript.Boolean)>(r9, 1);

        throw r5;

     label5:
        r5 = r3;

        return r5;

        catch JavaScript.Exception from label2 to label3 with label4;
    }

    public static JavaScript.Function.HermesByteCode.hermesNoNameFunction_0.JavaScript.FunctionOutput hermesNoNameFunction_0(JavaScript.Object)
    {
        JavaScript.Function.HermesByteCode.next r3;
        JavaScript.Undefined r1;
        JavaScript.Parameter_0 arg0;
        JavaScript.Environment_this r0;
        JavaScript.Number_1 r2;
        JavaScript.Object 1, r4;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Number_1 LoadConstUInt8(JavaScript.Number)>(1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r2);

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Function.HermesByteCode.next CreateClosure(JavaScript.Environment,int)>(r0, 2);

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObject()>();

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r4, r3, "next");

        return r4;
    }

    public static JavaScript.Function.HermesByteCode.next.JavaScript.FunctionOutput next(JavaScript.Object)
    {
        JavaScript.Environment_0 r0, r8;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object 3, 1, r9;
        JavaScript.Number r6, r7;
        JavaScript.Boolean r2, r4;
        JavaScript.Environment_0.index_0 r5;
        JavaScript.Undefined r3;
        JavaScript.Number_1 r1;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Number_3 LoadConstUInt8(JavaScript.Number)>(3);

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Number_1 LoadConstUInt8(JavaScript.Number)>(1);

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Boolean LoadConstFalse()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Boolean LoadConstTrue()>();

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Environment_0 GetEnvironment(JavaScript.Number)>(0);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Environment_0.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r5, 0);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Boolean LessEq(JavaScript.Object,JavaScript.Object)>(r6, r0);

        if r7 == 1 goto label1;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObject()>();

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r0, r3, "value");

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r0, r4, "done");

        return r0;

     label1:
        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_0 GetEnvironment(JavaScript.Number)>(0);

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Environment_0.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Number ToNumber(JavaScript.Object)>(r5);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Number AddN(JavaScript.Object,JavaScript.Object)>(r6, r1);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Environment_0 GetEnvironment(JavaScript.Number)>(0);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r8, 0, r7);

        r9 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObject()>();

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r9, r6, "value");

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r9, r2, "done");

        return r9;
    }
}
