public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r6, r10, r11, r16, r17, r18;
        JavaScript.Function.HermesByteCode.getRectArea r5;
        JavaScript.Environment_this r0;
        JavaScript.Undefined r2;
        Hbc.GlobalObject.getRectArea r9, r14;
        Hbc.GlobalObject r1;
        JavaScript.Negate r15;
        Hbc.GlobalObject.console r7, r12;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object 3, 4, r22, r21, r20;
        Hbc.GlobalObject.console.log r8, r13;
        JavaScript.Number_4 r4;
        JavaScript.Number_3 r3;

        arg0 := @parameter0: JavaScript.Parameter_0;

        staticinvoke <Hbc.Opcode: void declareGlobalVar(JavaScript.Object)>("getRectArea");

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Number_3 LoadConstUInt8(JavaScript.Number)>(3);

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Number_4 LoadConstUInt8(JavaScript.Number)>(4);

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Function.HermesByteCode.getRectArea CreateClosure(JavaScript.Environment,int)>(r0, 1);

        staticinvoke <Hbc.Opcode: void PutById(JavaScript.Object,JavaScript.Object,JavaScript.Number,JavaScript.String)>(r1, r5, 1, "getRectArea");

        r6 = r2;

        r7 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r1, 1, "console");

        r8 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r7, 2, "log");

        r9 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.getRectArea hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r1, 3, "getRectArea");

        r22 = r2;

        r21 = r3;

        r20 = r4;

        r10 = staticinvoke <Hbc.GlobalObject: Hbc.GlobalObject.getRectArea.JavaScript.FunctionOutput getRectArea(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r22, r21, r20);

        r22 = r7;

        r21 = r10;

        r11 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r22, r21);

        r6 = r11;

        r12 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r1, 1, "console");

        r13 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r12, 2, "log");

        r14 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.getRectArea hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r1, 3, "getRectArea");

        r15 = staticinvoke <Hbc.Opcode: JavaScript.Negate Negate(JavaScript.Object)>(r3);

        r22 = r2;

        r21 = r15;

        r20 = r4;

        r16 = staticinvoke <Hbc.GlobalObject: Hbc.GlobalObject.getRectArea.JavaScript.FunctionOutput getRectArea(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r22, r21, r20);

        r22 = r12;

        r21 = r16;

        r17 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r22, r21);

        r6 = r17;

        r18 = r6;

        return r18;
    }

    public static JavaScript.Function.HermesByteCode.getRectArea.JavaScript.FunctionOutput getRectArea(JavaScript.Object, JavaScript.Object, JavaScript.Object)
    {
        JavaScript.Parameter_1 arg1;
        JavaScript.Parameter_2 arg2;
        JavaScript.Parameter_0 arg0;
        JavaScript.Environment_this r0;
        JavaScript.Number r5;
        JavaScript.Environment.index_0 r1;
        JavaScript.Boolean r6;
        JavaScript.Undefined r4;
        JavaScript.Number_0 r3;
        JavaScript.Environment.index_1 r2;

        arg0 := @parameter0: JavaScript.Parameter_0;

        arg1 := @parameter1: JavaScript.Parameter_1;

        arg2 := @parameter2: JavaScript.Parameter_2;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = arg1;

        r2 = arg2;

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Number_0 LoadConstZero()>();

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r2);

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Greater(JavaScript.Object,JavaScript.Object)>(r5, r3);

        if r6 == 0 goto label1;

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Greater(JavaScript.Object,JavaScript.Object)>(r1, r3);

        if r2 == 1 goto label2;

     label1:
        return r3;

     label2:
        r1 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Number Mul(JavaScript.Object,JavaScript.Object)>(r1, r2);

        return r5;
    }
}
