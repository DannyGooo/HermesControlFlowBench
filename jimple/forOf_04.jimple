public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r3, r16, r19;
        JavaScript.Exception Catch;
        JavaScript.Environment_this.index_0 r15;
        JavaScript.Environment_this r0;
        JavaScript.Boolean r11;
        JavaScript.Undefined r1;
        Hbc.GlobalObject r2;
        JavaScript.IteratorBegin r6, r8, r14;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object r22, r21;
        JavaScript.Environment.index_0 r7;
        Hbc.GlobalObject.console.log r17;
        JavaScript.IteratorNext r4, r5, r9, r10, r12, r13;
        JavaScript.Environment.index_3 r18;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 2, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 3, r1);

        r3 = r1;

        r4 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Map hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 1, "Map");

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Array NewArrayWithBuffer(JavaScript.Number,JavaScript.Number,JavaScript.Number)>(2, 2, 0);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Array NewArray(JavaScript.Number)>(3);

        staticinvoke <Hbc.Opcode: void PutOwnByIndex(JavaScript.Object,JavaScript.Object,JavaScript.Number)>(r6, r5, 0);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Array NewArrayWithBuffer(JavaScript.Number,JavaScript.Number,JavaScript.Number)>(2, 2, 7);

        staticinvoke <Hbc.Opcode: void PutOwnByIndex(JavaScript.Object,JavaScript.Object,JavaScript.Number)>(r6, r7, 1);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Array NewArrayWithBuffer(JavaScript.Number,JavaScript.Number,JavaScript.Number)>(2, 2, 14);

        staticinvoke <Hbc.Opcode: void PutOwnByIndex(JavaScript.Object,JavaScript.Object,JavaScript.Number)>(r6, r8, 2);

        r9 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Map.prototype hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 2, "prototype");

        r10 = staticinvoke <Hbc.Opcode: JavaScript.CreateThis CreateThis(JavaScript.Object,JavaScript.Object)>(r9, r4);

        r22 = r10;

        r21 = r6;

        r11 = staticinvoke <Hbc.GlobalObject: Hbc.GlobalObject.Map.JavaScript.FunctionOutput Map(JavaScript.Object,JavaScript.Object)>(r22, r21);

        r12 = staticinvoke <Hbc.Opcode: JavaScript.SelectObject SelectObject(JavaScript.Object,JavaScript.Object)>(r10, r11);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r12);

        r13 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r15 = r13;

        r16 = staticinvoke <Hbc.Opcode: JavaScript.IteratorBegin IteratorBegin(JavaScript.Object)>(r15);

        r14 = r16;

     label01:
        r4 = staticinvoke <Hbc.Opcode: JavaScript.IteratorNext IteratorNext(JavaScript.Object,JavaScript.Object)>(r14, r15);

        r5 = r14;

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r5, r1);

        if r6 == 1 goto label05;

     label02:
        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r4);

        r5 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "console");

        r6 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r5, 4, "log");

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r22 = r5;

        r21 = r7;

        r8 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r22, r21);

        r3 = r8;

     label03:
        goto label01;

     label04:
        Catch := @caughtexception;

        staticinvoke <Hbc.Opcode: JavaScript.IteratorClose IteratorClose(JavaScript.Object,JavaScript.Boolean)>(r14, 1);

        throw r5;

     label05:
        r5 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r7 = r5;

        r8 = staticinvoke <Hbc.Opcode: JavaScript.IteratorBegin IteratorBegin(JavaScript.Object)>(r7);

        r6 = r8;

     label06:
        r5 = staticinvoke <Hbc.Opcode: JavaScript.IteratorNext IteratorNext(JavaScript.Object,JavaScript.Object)>(r6, r7);

        r8 = r6;

        r9 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r8, r1);

        if r9 == 1 goto label13;

     label07:
        r9 = r5;

        r10 = staticinvoke <Hbc.Opcode: JavaScript.IteratorBegin IteratorBegin(JavaScript.Object)>(r9);

        r8 = r10;

        r11 = r1;

        r12 = r1;

        r10 = staticinvoke <Hbc.Opcode: JavaScript.IteratorNext IteratorNext(JavaScript.Object,JavaScript.Object)>(r8, r9);

        r13 = r8;

        r16 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r13, r1);

        r11 = r16;

        if r16 == 1 goto label08;

        r12 = r10;

     label08:
        r13 = r12;

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 2, r13);

        r12 = r1;

        r16 = r11;

        if r16 == 1 goto label09;

        r13 = staticinvoke <Hbc.Opcode: JavaScript.IteratorNext IteratorNext(JavaScript.Object,JavaScript.Object)>(r8, r9);

        r16 = r8;

        r17 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r16, r1);

        r11 = r17;

        if r17 == 1 goto label09;

        r12 = r13;

     label09:
        r16 = r12;

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 3, r16);

        r17 = r11;

        if r17 == 1 goto label10;

        staticinvoke <Hbc.Opcode: JavaScript.IteratorClose IteratorClose(JavaScript.Object,JavaScript.Boolean)>(r8, 0);

     label10:
        r16 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "console");

        r17 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r16, 4, "log");

        r18 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_3 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 3);

        r22 = r16;

        r21 = r18;

        r19 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r22, r21);

        r3 = r19;

     label11:
        goto label06;

     label12:
        Catch := @caughtexception;

        staticinvoke <Hbc.Opcode: JavaScript.IteratorClose IteratorClose(JavaScript.Object,JavaScript.Boolean)>(r6, 1);

        throw r16;

     label13:
        r16 = r3;

        return r16;

        catch JavaScript.Exception from label02 to label03 with label04;
        catch JavaScript.Exception from label07 to label11 with label12;
    }
}
