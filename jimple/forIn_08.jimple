public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r1, r7, r21, r22, r27;
        JavaScript.Environment_this.index_0 r10;
        Hbc.GlobalObject.HermesInternal.concat r20;
        JavaScript.Object.GetByVal.JavaScript.Property r18;
        JavaScript.GetNextPName r14;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object r11, r12, r32, r31, r30, r29, r26;
        JavaScript.Environment.index_0 r16, r25;
        Hbc.GlobalObject.console.log r13;
        Hbc.GlobalObject.Object r23;
        JavaScript.Environment.index_1 r15, r17;
        Hbc.GlobalObject.Object.defineProperty r24;
        Hbc.GlobalObject.HermesInternal r19;
        JavaScript.Environment_this r0;
        JavaScript.String r3, r4, r6;
        JavaScript.GetPNameList r9;
        JavaScript.Boolean r5;
        Hbc.GlobalObject r2;
        Hbc.GlobalObject.console r8;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("obj.");

        r4 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>(" = ");

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Boolean LoadConstFalse()>();

        r6 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("c");

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        r7 = r1;

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObjectWithBuffer(JavaScript.Number,JavaScript.Number,JavaScript.Number,JavaScript.Number)>(3, 3, 0, 0);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r8);

        r13 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r10 = r13;

        r9 = staticinvoke <Hbc.Opcode: JavaScript.GetPNameList GetPNameList(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r10, r11, r12);

        if r9 == null goto label2;

     label1:
        r14 = staticinvoke <Hbc.Opcode: JavaScript.GetNextPName GetNextPName(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r9, r10, r11, r12);

        if r14 == null goto label2;

        r1 = r14;

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        r8 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 1, "console");

        r13 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r8, 2, "log");

        r15 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r16 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r17 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r18 = staticinvoke <Hbc.Opcode: JavaScript.Object.GetByVal.JavaScript.Property GetByVal(JavaScript.Object,JavaScript.Object)>(r16, r17);

        r19 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "HermesInternal");

        r20 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal.concat hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r19, 4, "concat");

        r32 = r3;

        r31 = r15;

        r30 = r4;

        r29 = r18;

        r21 = staticinvoke <Hbc.GlobalObject.HermesInternal: Hbc.GlobalObject.HermesInternal.concat.JavaScript.FunctionOutput concat(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r32, r31, r30, r29);

        r32 = r8;

        r31 = r21;

        r22 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r32, r31);

        r7 = r22;

        r23 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Object hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 5, "Object");

        r24 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Object.defineProperty hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r23, 6, "defineProperty");

        r25 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r26 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObject()>();

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r26, r5, "enumerable");

        r32 = r23;

        r31 = r25;

        r30 = r6;

        r29 = r26;

        r27 = staticinvoke <Hbc.GlobalObject.Object: Hbc.GlobalObject.Object.defineProperty.JavaScript.FunctionOutput defineProperty(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r32, r31, r30, r29);

        r7 = r27;

        goto label1;

     label2:
        r1 = r7;

        return r1;
    }
}
