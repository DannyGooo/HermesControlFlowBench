public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r3, r9, r12;
        JavaScript.Number_9 r6;
        JavaScript.Environment_this r2;
        JavaScript.Number r11;
        JavaScript.String r5;
        JavaScript.Boolean r10;
        Hbc.GlobalObject r4;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object 9, 1, r15, r14;
        JavaScript.Number_0 r8;
        Hbc.GlobalObject.window.start r0, r1;
        JavaScript.Number_1 r7;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r4 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r5 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("start");

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Number_9 LoadConstUInt8(JavaScript.Number)>(9);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Number_1 LoadConstUInt8(JavaScript.Number)>(1);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Number_0 LoadConstZero()>();

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r2, 0, r3);

        r9 = r3;

        r10 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.window hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 1, "window");

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Boolean IsIn(JavaScript.Object,JavaScript.Object)>(r5, r10);

        if r11 == 1 goto label1;

        r0 = r8;

        goto label2;

     label1:
        r3 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.window hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 1, "window");

        r10 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.window.start hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 2, "start");

        r0 = r10;

     label2:
        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r2, 0, r0);

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r2, 0);

        r10 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Less(JavaScript.Object,JavaScript.Object)>(r3, r6);

        if r10 == 0 goto label4;

     label3:
        r3 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 3, "console");

        r10 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 4, "log");

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r2, 0);

        r15 = r3;

        r14 = r11;

        r12 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r15, r14);

        r9 = r12;

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r2, 0);

        r10 = staticinvoke <Hbc.Opcode: JavaScript.Number ToNumber(JavaScript.Object)>(r3);

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Number AddN(JavaScript.Object,JavaScript.Object)>(r10, r7);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r2, 0, r11);

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r2, 0);

        r10 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Less(JavaScript.Object,JavaScript.Object)>(r3, r6);

        if r10 == 1 goto label3;

     label4:
        r3 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.window hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 1, "window");

        r10 = staticinvoke <Hbc.Opcode: JavaScript.Boolean IsIn(JavaScript.Object,JavaScript.Object)>(r5, r3);

        if r10 == 1 goto label5;

        r1 = r8;

        goto label6;

     label5:
        r3 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.window hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 1, "window");

        r10 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.window.start hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 2, "start");

        r1 = r10;

     label6:
        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r2, 0, r1);

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r2, 0);

        r10 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Less(JavaScript.Object,JavaScript.Object)>(r3, r6);

        if r10 == 0 goto label8;

     label7:
        r3 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 3, "console");

        r10 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 4, "log");

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r2, 0);

        r15 = r3;

        r14 = r11;

        r12 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r15, r14);

        r9 = r12;

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r2, 0);

        r10 = staticinvoke <Hbc.Opcode: JavaScript.Number ToNumber(JavaScript.Object)>(r3);

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Number AddN(JavaScript.Object,JavaScript.Object)>(r10, r7);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r2, 0, r11);

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r2, 0);

        r10 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Less(JavaScript.Object,JavaScript.Object)>(r3, r6);

        if r10 == 1 goto label7;

     label8:
        r3 = r9;

        return r3;
    }
}
