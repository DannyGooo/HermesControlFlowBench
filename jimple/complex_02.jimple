public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r12, r17, r20, r27, r28;
        JavaScript.Environment_this.index_1 r14, r15;
        Hbc.GlobalObject.HermesInternal.concat r26;
        JavaScript.Object.GetByVal.JavaScript.Property r24;
        JavaScript.GetNextPName r18;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object r33, r32, r31, r30;
        JavaScript.Environment.index_0 r13, r22;
        Hbc.GlobalObject.console.log r19;
        JavaScript.Environment.index_2 r21, r23;
        Hbc.GlobalObject.HermesInternal r16, r25;
        JavaScript.Environment_this r0;
        JavaScript.GetPNameList r1;
        JavaScript.String r2, r4, r5, r6, r7, r8, r9, r10, r11;
        Hbc.GlobalObject r3;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Papayas");

        r3 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r4 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Oranges are $0.59 a pound.");

        r5 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("");

        r6 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>(": ");

        r7 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Mangoes and papayas are $2.79 a pound.");

        r8 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Sorry, we are out of ");

        r9 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>(".");

        r10 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Mangoes");

        r11 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Oranges");

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 2, r1);

        r12 = r1;

        r13 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObjectWithBuffer(JavaScript.Number,JavaScript.Number,JavaScript.Number,JavaScript.Number)>(3, 3, 0, 0);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r13);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r2);

        r14 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r11, r14);

        if r1 == 1 goto label4;

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r10, r14);

        if r1 == 1 goto label1;

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r2, r14);

        if r1 == 1 goto label3;

        r1 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 1, "console");

        r13 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r1, 2, "log");

        r15 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r16 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 3, "HermesInternal");

        r17 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal.concat hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r16, 4, "concat");

        r33 = r8;

        r32 = r15;

        r31 = r9;

        r18 = staticinvoke <Hbc.GlobalObject.HermesInternal: Hbc.GlobalObject.HermesInternal.concat.JavaScript.FunctionOutput concat(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r33, r32, r31);

        r33 = r1;

        r32 = r18;

        r19 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r33, r32);

        r12 = r19;

        goto label5;

     label1:
        r17 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r13 = r17;

        r1 = staticinvoke <Hbc.Opcode: JavaScript.GetPNameList GetPNameList(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r13, r15, r16);

        if r1 == null goto label3;

     label2:
        r18 = staticinvoke <Hbc.Opcode: JavaScript.GetNextPName GetNextPName(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r1, r13, r15, r16);

        if r18 == null goto label3;

        r17 = r18;

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 2, r17);

        r19 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 1, "console");

        r20 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r19, 2, "log");

        r21 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r22 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r23 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r24 = staticinvoke <Hbc.Opcode: JavaScript.Object.GetByVal.JavaScript.Property GetByVal(JavaScript.Object,JavaScript.Object)>(r22, r23);

        r25 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 3, "HermesInternal");

        r26 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal.concat hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r25, 4, "concat");

        r33 = r5;

        r32 = r21;

        r31 = r6;

        r30 = r24;

        r27 = staticinvoke <Hbc.GlobalObject.HermesInternal: Hbc.GlobalObject.HermesInternal.concat.JavaScript.FunctionOutput concat(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r33, r32, r31, r30);

        r33 = r19;

        r32 = r27;

        r28 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r33, r32);

        r12 = r28;

        goto label2;

     label3:
        r17 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 1, "console");

        r19 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r17, 2, "log");

        r33 = r17;

        r32 = r7;

        r20 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r33, r32);

        r12 = r20;

        goto label5;

     label4:
        r17 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 1, "console");

        r19 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r17, 2, "log");

        r33 = r17;

        r32 = r4;

        r20 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r33, r32);

        r12 = r20;

     label5:
        r17 = r12;

        return r17;
    }
}
