public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r1, r9;
        JavaScript.Environment_this r0;
        JavaScript.Number r8;
        JavaScript.Boolean r3;
        JavaScript.Undefined r2;
        Hbc.GlobalObject r4;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object 1000, 3, 1, r13, r12, r11;
        JavaScript.Number_1000 r5;
        JavaScript.Number_1 r7;
        JavaScript.Number_3 r6;

        arg0 := @parameter0: JavaScript.Parameter_0;

        staticinvoke <Hbc.Opcode: void declareGlobalVar(JavaScript.Object)>("i");

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.This LoadThisNS()>();

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Number_0 LoadConstZero()>();

        r4 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Number_1000 LoadConstInt(JavaScript.Number)>(1000);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Number_3 LoadConstUInt8(JavaScript.Number)>(3);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Number_1 LoadConstUInt8(JavaScript.Number)>(1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.GetNewTarget GetNewTarget()>();

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r8);

        r9 = r2;

        staticinvoke <Hbc.Opcode: void PutById(JavaScript.Object,JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, r3, 1, "i");

        r1 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.i hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 1, "i");

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Less(JavaScript.Object,JavaScript.Object)>(r1, r6);

        if r3 == 0 goto label2;

     label1:
        r1 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.setTimeout hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 2, "setTimeout");

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Function.HermesByteCode.hermesNoNameFunction_0 CreateClosure(JavaScript.Environment,int)>(r0, 1);

        r13 = r2;

        r12 = r3;

        r11 = r5;

        r8 = staticinvoke <Hbc.GlobalObject: Hbc.GlobalObject.setTimeout.JavaScript.FunctionOutput setTimeout(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r13, r12, r11);

        r9 = r8;

        r1 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.i hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 1, "i");

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Number ToNumber(JavaScript.Object)>(r1);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Number AddN(JavaScript.Object,JavaScript.Object)>(r3, r7);

        staticinvoke <Hbc.Opcode: void PutById(JavaScript.Object,JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, r8, 1, "i");

        r1 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.i hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 1, "i");

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Less(JavaScript.Object,JavaScript.Object)>(r1, r6);

        if r3 == 1 goto label1;

     label2:
        r1 = r9;

        return r1;
    }

    public static JavaScript.Function.HermesByteCode.hermesNoNameFunction_0.JavaScript.FunctionOutput hermesNoNameFunction_0(JavaScript.Object)
    {
        JavaScript.FunctionOutput r5;
        Hbc.GlobalObject.console r2;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object r7, r6;
        Hbc.GlobalObject.i r4;
        Hbc.GlobalObject.console.log r3;
        JavaScript.Undefined r1;
        Hbc.GlobalObject r0;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r0 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r0, 1, "console");

        r3 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 2, "log");

        r4 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.i hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r0, 3, "i");

        r7 = r2;

        r6 = r4;

        r5 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r7, r6);

        return r1;
    }
}
