public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r1, r5, r12;
        JavaScript.Environment_this r0;
        JavaScript.Number r8, r9;
        JavaScript.Object.GetByVal.JavaScript.Property r11;
        JavaScript.Boolean r6;
        Hbc.GlobalObject r4;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object 1, r16, r15, r14;
        JavaScript.Environment.index_2 r2, r7, r10;
        JavaScript.Number_1 r3;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Number_0 LoadConstZero()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Number_1 LoadConstUInt8(JavaScript.Number)>(1);

        r4 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 2, r1);

        r5 = r1;

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Array NewArrayWithBuffer(JavaScript.Number,JavaScript.Number,JavaScript.Number)>(6, 6, 0);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r6);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r2);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0.length hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r7, 1, "length");

        r9 = staticinvoke <Hbc.Opcode: JavaScript.Number Sub(JavaScript.Object,JavaScript.Object)>(r8, r3);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 2, r9);

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Less(JavaScript.Object,JavaScript.Object)>(r1, r2);

        if r6 == 0 goto label2;

     label1:
        r1 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 2, "console");

        r2 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r1, 3, "log");

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Object.GetByVal.JavaScript.Property GetByVal(JavaScript.Object,JavaScript.Object)>(r6, r7);

        r9 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r10 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Object.GetByVal.JavaScript.Property GetByVal(JavaScript.Object,JavaScript.Object)>(r9, r10);

        r16 = r1;

        r15 = r8;

        r14 = r11;

        r12 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r16, r15, r14);

        r5 = r12;

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Number ToNumber(JavaScript.Object)>(r1);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Number AddN(JavaScript.Object,JavaScript.Object)>(r2, r3);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r6);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Number ToNumber(JavaScript.Object)>(r7);

        r9 = staticinvoke <Hbc.Opcode: JavaScript.Number SubN(JavaScript.Object,JavaScript.Object)>(r8, r3);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 2, r9);

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Less(JavaScript.Object,JavaScript.Object)>(r1, r2);

        if r6 == 1 goto label1;

     label2:
        r1 = r5;

        return r1;
    }
}
