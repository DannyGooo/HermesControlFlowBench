public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r0, r10, r12;
        JavaScript.Environment_this.index_0 r11;
        JavaScript.String r2, r4, r5, r6, r7, r8, r9;
        Hbc.GlobalObject r3;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object r15, r14;
        Hbc.GlobalObject.console.log r1;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Giraffe");

        r3 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r4 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("This animal is not extinct.");

        r5 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("This animal is extinct.");

        r6 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Dinosaur");

        r7 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Pig");

        r8 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Dog");

        r9 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("Cow");

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        r10 = r1;

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r2);

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r9, r11);

        if r0 == 1 goto label2;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r2, r11);

        if r0 == 1 goto label2;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r8, r11);

        if r0 == 1 goto label2;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r7, r11);

        if r0 == 1 goto label2;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r6, r11);

        if r0 == 0 goto label1;

     label1:
        r0 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 1, "console");

        r1 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r0, 2, "log");

        r15 = r0;

        r14 = r5;

        r12 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r15, r14);

        r10 = r12;

        goto label3;

     label2:
        r0 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 1, "console");

        r1 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r0, 2, "log");

        r15 = r0;

        r14 = r4;

        r12 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r15, r14);

        r10 = r12;

     label3:
        r0 = r10;

        return r0;
    }
}
