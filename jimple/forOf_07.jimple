public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r3, r5, r8;
        JavaScript.Exception Catch;
        JavaScript.Environment_this.index_0 r9, r11;
        JavaScript.Environment_this r0;
        JavaScript.Environment.index_1.classList.add r7;
        JavaScript.String r4;
        JavaScript.Undefined r1;
        JavaScript.IteratorBegin r12, r10;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object r15, r14;
        JavaScript.Environment.index_1.classList r6;
        JavaScript.IteratorNext r2;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("article > p");

        r4 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("read");

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        r5 = r1;

        r6 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.document hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 1, "document");

        r7 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.document.querySelectorAll hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r6, 2, "querySelectorAll");

        r15 = r6;

        r14 = r3;

        r8 = staticinvoke <Hbc.GlobalObject.document: Hbc.GlobalObject.document.querySelectorAll.JavaScript.FunctionOutput querySelectorAll(JavaScript.Object,JavaScript.Object)>(r15, r14);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r8);

        r9 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r11 = r9;

        r12 = staticinvoke <Hbc.Opcode: JavaScript.IteratorBegin IteratorBegin(JavaScript.Object)>(r11);

        r10 = r12;

     label1:
        r2 = staticinvoke <Hbc.Opcode: JavaScript.IteratorNext IteratorNext(JavaScript.Object,JavaScript.Object)>(r10, r11);

        r3 = r10;

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r3, r1);

        if r6 == 1 goto label5;

     label2:
        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r2);

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1.classList hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 3, "classList");

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1.classList.add hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r6, 4, "add");

        r15 = r6;

        r14 = r4;

        r8 = staticinvoke <JavaScript.Environment.index_1.classList: JavaScript.Environment.index_1.classList.add.JavaScript.FunctionOutput add(JavaScript.Object,JavaScript.Object)>(r15, r14);

        r5 = r8;

     label3:
        goto label1;

     label4:
        Catch := @caughtexception;

        staticinvoke <Hbc.Opcode: JavaScript.IteratorClose IteratorClose(JavaScript.Object,JavaScript.Boolean)>(r10, 1);

        throw r3;

     label5:
        r3 = r5;

        return r3;

        catch JavaScript.Exception from label2 to label3 with label4;
    }
}
