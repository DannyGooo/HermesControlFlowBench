public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r4, r12, r20;
        JavaScript.Exception Catch;
        JavaScript.Environment_this.index_0 r14;
        JavaScript.Environment_this r0;
        JavaScript.GetPNameList r3, r13;
        JavaScript.GetNextPName r9, r18;
        JavaScript.Undefined r1;
        Hbc.GlobalObject r2;
        JavaScript.IteratorBegin r10;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object r15, r16, r24, r23, r22;
        JavaScript.Environment.index_0 r5, r11;
        Hbc.GlobalObject.console.log r6, r17;
        JavaScript.IteratorNext r8;
        JavaScript.Environment.index_1 r7, r19;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("hello");

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        r4 = r1;

        r5 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Object hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 1, "Object");

        r6 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Object.prototype hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r5, 2, "prototype");

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Function.HermesByteCode.hermesNoNameFunction_0 CreateClosure(JavaScript.Environment,int)>(r0, 1);

        staticinvoke <Hbc.Opcode: void PutById(JavaScript.Object,JavaScript.Object,JavaScript.Number,JavaScript.String)>(r6, r7, 1, "objCustom");

        r4 = r7;

        r8 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Array hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "Array");

        r9 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Array.prototype hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r8, 2, "prototype");

        r10 = staticinvoke <Hbc.Opcode: JavaScript.Function.HermesByteCode.hermesNoNameFunction_1 CreateClosure(JavaScript.Environment,int)>(r0, 2);

        staticinvoke <Hbc.Opcode: void PutById(JavaScript.Object,JavaScript.Object,JavaScript.Number,JavaScript.String)>(r9, r10, 2, "arrCustom");

        r4 = r10;

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Array NewArrayWithBuffer(JavaScript.Number,JavaScript.Number,JavaScript.Number)>(3, 3, 0);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r11);

        r12 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        staticinvoke <Hbc.Opcode: void PutById(JavaScript.Object,JavaScript.Object,JavaScript.Number,JavaScript.String)>(r12, r3, 3, "foo");

        r4 = r3;

        r17 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r14 = r17;

        r13 = staticinvoke <Hbc.Opcode: JavaScript.GetPNameList GetPNameList(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r14, r15, r16);

        if r13 == null goto label02;

     label01:
        r18 = staticinvoke <Hbc.Opcode: JavaScript.GetNextPName GetNextPName(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r13, r14, r15, r16);

        if r18 == null goto label02;

        r3 = r18;

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r3);

        r5 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 4, "console");

        r6 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r5, 5, "log");

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r24 = r5;

        r23 = r7;

        r8 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r24, r23);

        r4 = r8;

        goto label01;

     label02:
        r8 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r5 = r8;

        r3 = staticinvoke <Hbc.Opcode: JavaScript.GetPNameList GetPNameList(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r5, r6, r7);

        if r3 == null goto label06;

     label03:
        r9 = staticinvoke <Hbc.Opcode: JavaScript.GetNextPName GetNextPName(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r3, r5, r6, r7);

        if r9 == null goto label06;

        r8 = r9;

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r8);

        r10 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Object hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 1, "Object");

        r11 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Object.hasOwn hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r10, 6, "hasOwn");

        r12 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r17 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r24 = r10;

        r23 = r12;

        r22 = r17;

        r19 = staticinvoke <Hbc.GlobalObject.Object: Hbc.GlobalObject.Object.hasOwn.JavaScript.FunctionOutput hasOwn(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r24, r23, r22);

        if r19 == 1 goto label04;

        goto label05;

     label04:
        r8 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 4, "console");

        r10 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r8, 5, "log");

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r24 = r8;

        r23 = r11;

        r12 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r24, r23);

        r4 = r12;

     label05:
        goto label03;

     label06:
        r8 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r11 = r8;

        r12 = staticinvoke <Hbc.Opcode: JavaScript.IteratorBegin IteratorBegin(JavaScript.Object)>(r11);

        r10 = r12;

     label07:
        r8 = staticinvoke <Hbc.Opcode: JavaScript.IteratorNext IteratorNext(JavaScript.Object,JavaScript.Object)>(r10, r11);

        r12 = r10;

        r17 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r12, r1);

        if r17 == 1 goto label11;

     label08:
        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r8);

        r12 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 4, "console");

        r17 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r12, 5, "log");

        r19 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r24 = r12;

        r23 = r19;

        r20 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r24, r23);

        r4 = r20;

     label09:
        goto label07;

     label10:
        Catch := @caughtexception;

        staticinvoke <Hbc.Opcode: JavaScript.IteratorClose IteratorClose(JavaScript.Object,JavaScript.Boolean)>(r10, 1);

        throw r12;

     label11:
        r12 = r4;

        return r12;

        catch JavaScript.Exception from label08 to label09 with label10;
    }

    public static JavaScript.Function.HermesByteCode.hermesNoNameFunction_0.JavaScript.FunctionOutput hermesNoNameFunction_0(JavaScript.Object)
    {
        JavaScript.Undefined r0;
        JavaScript.Parameter_0 arg0;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        return r0;
    }

    public static JavaScript.Function.HermesByteCode.hermesNoNameFunction_1.JavaScript.FunctionOutput hermesNoNameFunction_1(JavaScript.Object)
    {
        JavaScript.Undefined r0;
        JavaScript.Parameter_0 arg0;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        return r0;
    }
}
