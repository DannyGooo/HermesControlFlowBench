public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r1, r5, r19, r20;
        Hbc.GlobalObject.HermesInternal r17;
        JavaScript.Environment_this.index_0 r8;
        JavaScript.Environment_this r0;
        Hbc.GlobalObject.HermesInternal.concat r18;
        JavaScript.String r3, r4;
        JavaScript.GetPNameList r7;
        JavaScript.Object.GetByVal.JavaScript.Property r16;
        JavaScript.GetNextPName r12;
        Hbc.GlobalObject r2;
        Hbc.GlobalObject.console r6;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object r9, r10, r25, r24, r23, r22;
        JavaScript.Environment.index_0 r14;
        Hbc.GlobalObject.console.log r11;
        JavaScript.Environment.index_1 r13, r15;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("obj.");

        r4 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>(" = ");

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        r5 = r1;

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObjectWithBuffer(JavaScript.Number,JavaScript.Number,JavaScript.Number,JavaScript.Number)>(3, 3, 0, 0);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r6);

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r8 = r11;

        r7 = staticinvoke <Hbc.Opcode: JavaScript.GetPNameList GetPNameList(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r8, r9, r10);

        if r7 == null goto label2;

     label1:
        r12 = staticinvoke <Hbc.Opcode: JavaScript.GetNextPName GetNextPName(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r7, r8, r9, r10);

        if r12 == null goto label2;

        r1 = r12;

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        r6 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 1, "console");

        r11 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r6, 2, "log");

        r13 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r14 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r15 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r16 = staticinvoke <Hbc.Opcode: JavaScript.Object.GetByVal.JavaScript.Property GetByVal(JavaScript.Object,JavaScript.Object)>(r14, r15);

        r17 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "HermesInternal");

        r18 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal.concat hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r17, 4, "concat");

        r25 = r3;

        r24 = r13;

        r23 = r4;

        r22 = r16;

        r19 = staticinvoke <Hbc.GlobalObject.HermesInternal: Hbc.GlobalObject.HermesInternal.concat.JavaScript.FunctionOutput concat(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r25, r24, r23, r22);

        r25 = r6;

        r24 = r19;

        r20 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r25, r24);

        r5 = r20;

        goto label1;

     label2:
        r1 = r5;

        return r1;
    }
}
