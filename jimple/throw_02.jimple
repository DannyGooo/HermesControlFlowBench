public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r6, r9, r10;
        JavaScript.GetNewTarget r5;
        JavaScript.Function.HermesByteCode.hermesNoNameFunction_0 r8;
        JavaScript.Parameter_0 arg0;
        Hbc.GlobalObject.readFile r7;
        JavaScript.Environment_this r0;
        JavaScript.Object r14, r13, r12;
        JavaScript.String r4;
        JavaScript.This r1;
        JavaScript.Undefined r2;
        Hbc.GlobalObject r3;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.This LoadThisNS()>();

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r3 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r4 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("foo.txt");

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        r5 = staticinvoke <Hbc.Opcode: JavaScript.GetNewTarget GetNewTarget()>();

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r5);

        r6 = r2;

        r7 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.readFile hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 1, "readFile");

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Function.HermesByteCode.hermesNoNameFunction_0 CreateClosure(JavaScript.Environment,int)>(r0, 1);

        r14 = r2;

        r13 = r4;

        r12 = r8;

        r9 = staticinvoke <Hbc.GlobalObject: Hbc.GlobalObject.readFile.JavaScript.FunctionOutput readFile(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r14, r13, r12);

        r6 = r9;

        r10 = r6;

        return r10;
    }

    public static JavaScript.Function.HermesByteCode.hermesNoNameFunction_0.JavaScript.FunctionOutput hermesNoNameFunction_0(JavaScript.Object, JavaScript.Object, JavaScript.Object)
    {
        JavaScript.FunctionOutput r6;
        JavaScript.Parameter_1 arg1;
        JavaScript.Parameter_2 arg2;
        JavaScript.Parameter_0 arg0;
        JavaScript.Environment_this.index_1 r5;
        JavaScript.Environment_this r0;
        JavaScript.Object r8, r7;
        JavaScript.Environment.index_0 r1;
        Hbc.GlobalObject.console.log r2;
        JavaScript.Undefined r4;
        Hbc.GlobalObject r3;

        arg0 := @parameter0: JavaScript.Parameter_0;

        arg1 := @parameter1: JavaScript.Parameter_1;

        arg2 := @parameter2: JavaScript.Parameter_2;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = arg1;

        r2 = arg2;

        r3 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r2);

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        if r5 == 1 goto label1;

        r1 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r3, 1, "console");

        r2 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r1, 2, "log");

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r8 = r1;

        r7 = r5;

        r6 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r8, r7);

        return r4;

     label1:
        r1 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        throw r1;
    }
}
