public class HermesByteCode
{

    public static JavaScript.Function.HermesByteCode.global.JavaScript.FunctionOutput global(JavaScript.Object)
    {
        JavaScript.FunctionOutput r14, r15, r20, r21, r29, r30;
        Hbc.GlobalObject.HermesInternal.concat r19, r28;
        JavaScript.Undefined r1;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object 8, 1, 4, 2, r34, r33, r32;
        JavaScript.Environment.index_0 r25;
        Hbc.GlobalObject.console.log r23;
        JavaScript.Number_0 r3;
        JavaScript.Number_2 r11;
        JavaScript.Environment.index_1 r17;
        JavaScript.Number_1 r6;
        JavaScript.Environment.index_2 r26;
        JavaScript.Number_4 r7;
        Hbc.GlobalObject.HermesInternal r18, r27;
        JavaScript.Exception Catch;
        JavaScript.Environment_this r0;
        JavaScript.String r5, r8, r9, r10, r12, r13;
        JavaScript.Boolean r16;
        Hbc.GlobalObject r2;
        JavaScript.IteratorBegin r24;
        Hbc.GlobalObject.console r22;
        JavaScript.IteratorNext r4;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject GetGlobalObject()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Number_0 LoadConstZero()>();

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Number_8 LoadConstUInt8(JavaScript.Number)>(8);

        r5 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("i: ");

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Number_1 LoadConstUInt8(JavaScript.Number)>(1);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Number_4 LoadConstUInt8(JavaScript.Number)>(4);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("i = ");

        r9 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("j = ");

        r10 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("j: ");

        r11 = staticinvoke <Hbc.Opcode: JavaScript.Number_2 LoadConstUInt8(JavaScript.Number)>(2);

        r12 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>("");

        r13 = staticinvoke <Hbc.Opcode: JavaScript.String LoadConstString(JavaScript.String)>(" is odd.");

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 2, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 3, r1);

        r14 = r1;

        r15 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObject()>();

        r16 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Symbol hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 1, "Symbol");

        r17 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.Symbol.iterator hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r16, 2, "iterator");

        r18 = staticinvoke <Hbc.Opcode: JavaScript.Function.HermesByteCode.hermesNoNameFunction_0 CreateClosure(JavaScript.Environment,int)>(r0, 1);

        staticinvoke <Hbc.Opcode: void PutOwnByVal(JavaScript.Object,JavaScript.Object,JavaScript.Object,JavaScript.Boolean)>(r15, r18, r17, 1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r15);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r3);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 2, r4);

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r15 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Less(JavaScript.Object,JavaScript.Object)>(r4, r7);

        if r15 == 0 goto label10;

     label01:
        r4 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "console");

        r15 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 4, "log");

        r16 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r17 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 5, "HermesInternal");

        r18 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal.concat hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r17, 6, "concat");

        r34 = r5;

        r33 = r16;

        r19 = staticinvoke <Hbc.GlobalObject.HermesInternal: Hbc.GlobalObject.HermesInternal.concat.JavaScript.FunctionOutput concat(JavaScript.Object,JavaScript.Object)>(r34, r33);

        r34 = r4;

        r33 = r19;

        r20 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r34, r33);

        r14 = r20;

        r21 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r22 = staticinvoke <Hbc.Opcode: JavaScript.Number Add(JavaScript.Object,JavaScript.Object)>(r21, r6);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 1, r22);

        r14 = r22;

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r15 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Greater(JavaScript.Object,JavaScript.Object)>(r4, r7);

        if r15 == 0 goto label09;

     label02:
        r4 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "console");

        r15 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r4, 4, "log");

        r16 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r17 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 5, "HermesInternal");

        r18 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal.concat hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r17, 6, "concat");

        r34 = r10;

        r33 = r16;

        r19 = staticinvoke <Hbc.GlobalObject.HermesInternal: Hbc.GlobalObject.HermesInternal.concat.JavaScript.FunctionOutput concat(JavaScript.Object,JavaScript.Object)>(r34, r33);

        r34 = r4;

        r33 = r19;

        r20 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r34, r33);

        r14 = r20;

        r21 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r22 = staticinvoke <Hbc.Opcode: JavaScript.Number Sub(JavaScript.Object,JavaScript.Object)>(r21, r6);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 2, r22);

        r14 = r22;

        r23 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r25 = r23;

        r26 = staticinvoke <Hbc.Opcode: JavaScript.IteratorBegin IteratorBegin(JavaScript.Object)>(r25);

        r24 = r26;

     label03:
        r4 = staticinvoke <Hbc.Opcode: JavaScript.IteratorNext IteratorNext(JavaScript.Object,JavaScript.Object)>(r24, r25);

        r15 = r24;

        r16 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r15, r1);

        if r16 == 1 goto label07;

     label04:
        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 3, r4);

        r15 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "console");

        r16 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r15, 4, "log");

        r17 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_3 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 3);

        r34 = r15;

        r33 = r17;

        r18 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r34, r33);

        r14 = r18;

     label05:
        goto label03;

     label06:
        Catch := @caughtexception;

        staticinvoke <Hbc.Opcode: JavaScript.IteratorClose IteratorClose(JavaScript.Object,JavaScript.Boolean)>(r24, 1);

        throw r15;

     label07:
        r15 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r16 = staticinvoke <Hbc.Opcode: JavaScript.Number Mod(JavaScript.Object,JavaScript.Object)>(r15, r11);

        r17 = staticinvoke <Hbc.Opcode: JavaScript.Boolean StrictEq(JavaScript.Object,JavaScript.Object)>(r16, r3);

        if r17 == 1 goto label08;

        r15 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "console");

        r16 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r15, 4, "log");

        r17 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r18 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 5, "HermesInternal");

        r19 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal.concat hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r18, 6, "concat");

        r34 = r12;

        r33 = r17;

        r32 = r13;

        r20 = staticinvoke <Hbc.GlobalObject.HermesInternal: Hbc.GlobalObject.HermesInternal.concat.JavaScript.FunctionOutput concat(JavaScript.Object,JavaScript.Object,JavaScript.Object)>(r34, r33, r32);

        r34 = r15;

        r33 = r20;

        r21 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r34, r33);

        r14 = r21;

        goto label08;

     label08:
        r15 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r16 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Greater(JavaScript.Object,JavaScript.Object)>(r15, r7);

        if r16 == 1 goto label02;

     label09:
        r15 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "console");

        r16 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r15, 4, "log");

        r17 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r18 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 5, "HermesInternal");

        r19 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal.concat hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r18, 6, "concat");

        r34 = r8;

        r33 = r17;

        r20 = staticinvoke <Hbc.GlobalObject.HermesInternal: Hbc.GlobalObject.HermesInternal.concat.JavaScript.FunctionOutput concat(JavaScript.Object,JavaScript.Object)>(r34, r33);

        r34 = r15;

        r33 = r20;

        r21 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r34, r33);

        r14 = r21;

        r22 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 3, "console");

        r23 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.console.log hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r22, 4, "log");

        r26 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_2 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 2);

        r27 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r2, 5, "HermesInternal");

        r28 = staticinvoke <Hbc.Opcode: Hbc.GlobalObject.HermesInternal.concat hbcGet(JavaScript.Object,JavaScript.Number,JavaScript.String)>(r27, 6, "concat");

        r34 = r9;

        r33 = r26;

        r29 = staticinvoke <Hbc.GlobalObject.HermesInternal: Hbc.GlobalObject.HermesInternal.concat.JavaScript.FunctionOutput concat(JavaScript.Object,JavaScript.Object)>(r34, r33);

        r34 = r22;

        r33 = r29;

        r30 = staticinvoke <Hbc.GlobalObject.console: Hbc.GlobalObject.console.log.JavaScript.FunctionOutput log(JavaScript.Object,JavaScript.Object)>(r34, r33);

        r14 = r30;

        r15 = staticinvoke <Hbc.Opcode: JavaScript.Environment.index_1 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 1);

        r16 = staticinvoke <Hbc.Opcode: JavaScript.Boolean Less(JavaScript.Object,JavaScript.Object)>(r15, r7);

        if r16 == 1 goto label01;

     label10:
        r15 = r14;

        return r15;

        catch JavaScript.Exception from label04 to label05 with label06;
    }

    public static JavaScript.Function.HermesByteCode.hermesNoNameFunction_0.JavaScript.FunctionOutput hermesNoNameFunction_0(JavaScript.Object)
    {
        JavaScript.Function.HermesByteCode.next r3;
        JavaScript.Undefined r1;
        JavaScript.Parameter_0 arg0;
        JavaScript.Environment_this r0;
        JavaScript.Number_1 r2;
        JavaScript.Object 1, r4;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Number_1 LoadConstUInt8(JavaScript.Number)>(1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r1);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreNPToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r0, 0, r2);

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Function.HermesByteCode.next CreateClosure(JavaScript.Environment,int)>(r0, 2);

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObject()>();

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r4, r3, "next");

        return r4;
    }

    public static JavaScript.Function.HermesByteCode.next.JavaScript.FunctionOutput next(JavaScript.Object)
    {
        JavaScript.Environment_0 r0, r8;
        JavaScript.Parameter_0 arg0;
        JavaScript.Object 3, 1, r9;
        JavaScript.Number r6, r7;
        JavaScript.Boolean r2, r4;
        JavaScript.Environment_0.index_0 r5;
        JavaScript.Undefined r3;
        JavaScript.Number_1 r1;

        arg0 := @parameter0: JavaScript.Parameter_0;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_this CreateEnvironment()>();

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Number_3 LoadConstUInt8(JavaScript.Number)>(3);

        r1 = staticinvoke <Hbc.Opcode: JavaScript.Number_1 LoadConstUInt8(JavaScript.Number)>(1);

        r2 = staticinvoke <Hbc.Opcode: JavaScript.Boolean LoadConstFalse()>();

        r3 = staticinvoke <Hbc.Opcode: JavaScript.Undefined LoadConstUndefined()>();

        r4 = staticinvoke <Hbc.Opcode: JavaScript.Boolean LoadConstTrue()>();

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Environment_0 GetEnvironment(JavaScript.Number)>(0);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Environment_0.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r5, 0);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Boolean LessEq(JavaScript.Object,JavaScript.Object)>(r6, r0);

        if r7 == 1 goto label1;

        r0 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObject()>();

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r0, r3, "value");

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r0, r4, "done");

        return r0;

     label1:
        r0 = staticinvoke <Hbc.Opcode: JavaScript.Environment_0 GetEnvironment(JavaScript.Number)>(0);

        r5 = staticinvoke <Hbc.Opcode: JavaScript.Environment_0.index_0 LoadFromEnvironment(JavaScript.Object,JavaScript.Number)>(r0, 0);

        r6 = staticinvoke <Hbc.Opcode: JavaScript.Number ToNumber(JavaScript.Object)>(r5);

        r7 = staticinvoke <Hbc.Opcode: JavaScript.Number AddN(JavaScript.Object,JavaScript.Object)>(r6, r1);

        r8 = staticinvoke <Hbc.Opcode: JavaScript.Environment_0 GetEnvironment(JavaScript.Number)>(0);

        staticinvoke <Hbc.Opcode: JavaScript.Environment StoreToEnvironment(JavaScript.Environment,int,JavaScript.Object)>(r8, 0, r7);

        r9 = staticinvoke <Hbc.Opcode: JavaScript.Object NewObject()>();

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r9, r6, "value");

        staticinvoke <Hbc.Opcode: void PutNewOwnByIdShort(JavaScript.Object,JavaScript.Object,JavaScript.String)>(r9, r2, "done");

        return r9;
    }
}
